/*****************************************************
Project : 
Version : 
Date    : 25.07.2009
Author  : F4CG                            
Company : F4CG                            
Comments: 


Chip type           : ATmega8
Program type        : Application
Clock frequency     : 8.000000 MHz
Memory model        : Small
External SRAM size  : 0
Data Stack size     : 256
*****************************************************/

#include <mega8.h>   //Подключение
#include <stdio.h>   //           внешнх 
#include <delay.h>   //                  библиотек


#define   ON_LED1      (PORTB = 0b00000010)
#define   ON_LED2      (PORTB = 0b00000110)
#define   ON_LED3      (PORTB = 0b00001110)
#define   ON_LED4      (PORTB = 0b00011110)
#define   ON_LED5      (PORTB = 0b00111110)
//#define   ON_LED6      (PORTB = 0b01111110)
//#define   ON_LED7      (PORTB = 0b11111110)

#define   ON_LED6      (PORTB = 0b00111110) | (PORTC = 0b00000001) 
#define   ON_LED7      (PORTB = 0b00111110) | (PORTC = 0b00000011)
#define   ON_LED8      (PORTB = 0b00111110) | (PORTC = 0b00000111)
#define   ON_LED9      (PORTB = 0b00111110) | (PORTC = 0b00001111) 
#define   ON_LED10     (PORTB = 0b00111110) | (PORTC = 0b00011111)

#define   ON_LED11     (PORTB = 0b00111110) | (PORTC = 0b00011111) | (PORTD = 0b00000001)
#define   ON_LED12     (PORTB = 0b00111110) | (PORTC = 0b00011111) | (PORTD = 0b00000011)
#define   ON_LED13     (PORTB = 0b00111110) | (PORTC = 0b00011111) | (PORTD = 0b00000111)
#define   ON_LED14     (PORTB = 0b00111110) | (PORTC = 0b00011111) | (PORTD = 0b00001111)
#define   ON_LED15     (PORTB = 0b00111110) | (PORTC = 0b00011111) | (PORTD = 0b00101111)
#define   ON_LED16     (PORTB = 0b00111110) | (PORTC = 0b00011111) | (PORTD = 0b01101111)
#define   ON_LED17     (PORTB = 0b00111110) | (PORTC = 0b00011111) | (PORTD = 0b11101111)

#define   OFF_LEDS     (PORTB = 0) | (PORTC = 0) | (PORTD = 0)

/***** Назначение портов ввода вывода ****************************
 ---------------------------------------------------------------------------------------------------
  PORTB  
    PB0 (14) - Цифровой вход захвата ICP измеряемая частота
    PB1 (15) - Цифровой выход на подсветку
    PB2 (16) - Цифровой выход
    PB3 (17) - Цифровой выход
    PB4 (18) - Цифровой выход
    PB5 (19) - Цифровой выход
    PB6 (9)  - Для кварца
    PB7 (10) - Для кварца
  PORTC
    PC0 (23) - Цифровой выход 
    PC1 (24) - Цифровой выход
    PC2 (25) - Цифровой выход
    PC3 (26) - Цифровой выход        
    PC4 (27) - Цифровой выход 
    PC5 (28) - Цифровой вход  измерения напряжения
    PC6 (1)  - 
  PORTD
    PD0 (2 ) - Цифровой выход 
    PD1 (3 ) - Цифровой выход 
    PD2 (4 ) - Цифровой выход 
    PD3 (5 ) - Цифровой выход 
    PD4 (6 ) - Цифровой вход измеряемая частота
    PD5 (11) - Цифровой выход  
    PD6 (12) - Цифровой выход  
    PD7 (13) - Цифровой выход 
*************************************************************************/

//Объвление переменных
float Fx;

unsigned long int N0, M0;                     

unsigned long int N, M;                       // количество импульсов за время измерения

unsigned int OVF_T0=0, OVF_T1=0;

unsigned int Ntakt, Mx;                       // количество тиков тактовой и измеряемой частоты

//Прерывание по переполнению Timer/Counter 0
interrupt [TIM0_OVF] void timer0_ovf_isr(void)
{
OVF_T0++;                                     
}

//Прерывание по переполнению Timer/Counter 1
interrupt [TIM1_OVF] void timer1_ovf_isr(void)
{
OVF_T1++;                                     
}

//Прерывание по захвату Timer/Counter 1
interrupt [TIM1_CAPT] void timer1_capt_isr(void)
{
Mx=TCNT0;                                     // Значение регистра TCNT0 переписывается в переменную

Ntakt=ICR1;                                   // Значение регистра ICR1 переписывается в переменную
  
TIMSK&=0xDF;                                  // Запрет прерывания по захвату
  } 


/********************** Основная программа ******************************/

void main(void)
{

/************ Инициализация портов ввода-ввывода ***********************/
// Инициализация порта C
// выходы, кроме PC5
PORTC=0x00;
DDRC=0x00011111;

// Инициализация порта B
// выходы, кроме PB0, PB6, PB7
PORTB=0x00;
DDRB=0b00111110;

// Инициализация порта D
// выходы, кроме PD4
PORTD=0x00;
DDRD=0b11101111;
  
/************ Инициализация таймеров-счетчиков *************************/

//Инициализация Timer/Counter 0
TCCR0=0x07;
TCNT0=0x00;

//Инициализация Timer/Counter 1
TCCR1A=0x00;
TCCR1B=0x41;
TCNT1H=0x00;
TCNT1L=0x00;
ICR1H=0x00;
ICR1L=0x00;
OCR1AH=0x00;
OCR1AL=0x00;
OCR1BH=0x00;
OCR1BL=0x00;

// Инициализация прерываний таймеров/счетчиков
TIMSK=0x05;

/****************** Бесконечный цикл **********************************/
while (1)                                     
{
#asm("cli")

OVF_T1 = 0;                                   

OVF_T0 = 0;                                 

Fx = 0;

TCNT0 = TCNT1 = 0;

#asm("sei")                                   // Разрешения прерываний

TIMSK|=0x20;                                  // Разрешили захват

while ((TIMSK&0x20)==0x20){}                  // Ожидание прерывания по захвату

N0=(((unsigned long int)(OVF_T1))<<16)+Ntakt; // Расчет общего количества тиков системной частоты

M0=(((unsigned long int)(OVF_T0))<<8)+Mx;     // Расчет общего количества тиков входной частоты

delay_ms(500);                               // Задержка 

TIMSK|=0x20;                                  // Разрешили захват

while ((TIMSK&0x20)==0x20){}                  // Ожидание прерывания по захвату

N=(((unsigned long int)(OVF_T1))<<16)+Ntakt;  // Расчет общего количества тиков системной частоты

M=(((unsigned long int)(OVF_T0))<<8)+Mx;      // Расчет общего количества тиков входной частоты

N=N-N0;                                       // Расчет количества тиков системной частоты за время измерения

M=M-M0;                                       // Расчет количества тиков входной частоты за время измерения

Fx=8000000.0*(float)M/(float)N;               // Вычисление частоты входного сигнала


if (Fx >= 126.7)                              // 3800 об/мин 126.66666 имп/с
{
 OFF_LEDS; 
 ON_LED19;
 } 
else
if (Fx >= 120)                                // 3600 об/мин 120 имп/с
{
 OFF_LEDS; 
 ON_LED18;
 } 
else
if (Fx >= 113.3)                              // 3400 об/мин 113.33333 имп/с
{
 OFF_LEDS; 
 ON_LED17;
 } 
else
if (Fx >= 106.7)                              // 3200 об/мин 106.66666 имп/с
{
 OFF_LEDS; 
 ON_LED16;
 } 
else
if (Fx >= 100)                                // 3000 об/мин 100 имп/с
{
 OFF_LEDS; 
 ON_LED15;
 } 
else
if (Fx >= 93.3)                               // 2800 об/мин 93.33333 имп/с
{
 OFF_LEDS; 
 ON_LED14;
 } 
else
if (Fx >= 86.7)                               // 2600 об/мин 86.66666 имп/с
{                                             
 OFF_LEDS; 
 ON_LED13;
 } 
else
if (Fx >= 80)                                 // 2400 об/мин 80 имп/с
{
 OFF_LEDS; 
 ON_LED12;
 } 
else
if (Fx >= 73.3)                               // 2200 об/мин 73.33333 имп/с
{
 OFF_LEDS; 
 ON_LED11;
 } 
else
if (Fx >= 66.7)                               // 2000 об/мин 66.66666 имп/с
{
 OFF_LEDS; 
 ON_LED10;
 } 
else
if (Fx >= 60)                                 // 1800 об/мин 60 имп/с
{
 OFF_LEDS; 
 ON_LED9;
 } 
else
if (Fx >= 53.3)                               // 1600 об/мин 53.33333 имп/с 
{
 OFF_LEDS; 
 ON_LED8;
 }
else 
if (Fx >= 46.7)                               // 1400 об/мин 46.66666 имп/с 
{
 OFF_LEDS; 
 ON_LED7;
 }
else  
if (Fx >= 40)                                 // 1200 об/мин 40 имп/с 
{
 OFF_LEDS; 
 ON_LED6;
 }
else  
if (Fx >= 33.3)                               // 1000 об/мин 33.33333 имп/с 
{
 OFF_LEDS; 
 ON_LED5;
 } 
else
if (Fx >= 26.7)                               // 800 об/мин 26.66666 имп/с 
{
 OFF_LEDS; 
 ON_LED4;
 } 
else
if (Fx >= 20)                                 // 600 об/мин 20 имп/с
{
 OFF_LEDS; 
 ON_LED3;
 } 
else
if (Fx >= 13.3)                               // 400 об/мин 13.33333 имп/с 
{
 OFF_LEDS; 
 ON_LED2;
 } 
else
if (Fx >= 6.7)                                // 200 об/мин 6.66666 имп/с 
{
 OFF_LEDS; 
 ON_LED1;
 }
else   
if (Fx < 6.7)
{
 OFF_LEDS; 
 }
 } // конец бесконечного цикла

}