;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 31.08.2013
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega8L
;Program type            : Application
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;unsigned int t;
; #define out PORTB.0
;  #define out2 PORTB.1
;
;// Timer2 overflow interrupt service routine
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 001F {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0020  TCNT2=0x05;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0021 t++;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0022 if(t==0){out=0;out2=1;}
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0023 if(t==1){out=1;out2=0;}
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0024 if(t==2){out=0;out2=1;t=0;}
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0025 }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;void main(void)
; 0000 0028 {
;PCODE: $0000002F VOL: 0
; 0000 0029 // Declare your local variables here
; 0000 002A 
; 0000 002B // Input/Output Ports initialization
; 0000 002C // Port B initialization
; 0000 002D // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 002E // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 002F PORTB=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0030 DDRB=0xFF;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0031 
; 0000 0032 // Port C initialization
; 0000 0033 // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0034 // State6=P State5=P State4=P State3=P State2=P State1=P State0=P
; 0000 0035 PORTC=0x7F;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0036 DDRC=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0037 
; 0000 0038 // Port D initialization
; 0000 0039 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=Out Func0=In
; 0000 003A // State7=T State6=T State5=T State4=T State3=T State2=T State1=0 State0=T
; 0000 003B PORTD=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 003C DDRD=0x02;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003D 
; 0000 003E // Timer/Counter 2 initialization
; 0000 003F // Clock source: TOSC1 pin
; 0000 0040 // Clock value: PCK2/128
; 0000 0041 // Mode: Normal top=0xFF
; 0000 0042 // OC2 output: Disconnected
; 0000 0043 ASSR=0x08;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0044 TCCR2=0x05;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0045 TCNT2=0x05;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0046 OCR2=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0047 
; 0000 0048 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0049 TIMSK=0x40;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004A 
; 0000 004B // Global enable interrupts
; 0000 004C #asm("sei")
;PCODE: $00000046 VOL: 0
	sei
;PCODE: $00000047 VOL: 0
; 0000 004D 
; 0000 004E while (1)
;PCODE: $00000048 VOL: 0
; 0000 004F       {
; 0000 0050       // Place your code here
; 0000 0051 
; 0000 0052       }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0053 }
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
