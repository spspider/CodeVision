;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.03.4 Standard
;Automatic Program Generator
;© Copyright 1998-2008 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 06.02.2010
;Author  :
;Company :
;Comments:
;
;
;Chip type           : ATmega8L
;Program type        : Application
;Clock frequency     : 8,000000 MHz
;Memory model        : Small
;External RAM size   : 0
;Data Stack size     : 256
;*****************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;eeprom unsigned long int Push1=-19095,Push2=-19098;
;unsigned int d=0,d1=0,d2=0,d3=0,adress1=4,adress2=5,adress3=24;

	.DSEG
;unsigned int PWM1=0,PWM1_V=0,Timer1,Timer2,bit1,bit0,FreqT=10,TOL=2,bit01,bit10,shiftd;
;unsigned int U1,U2,Timer_1;
;// Timer 1 output compare A interrupt service routine
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0022 /* if(PWM1==1)  {
; 0000 0023   PWM1_V-=1;
; 0000 0024   if (PWM1_V==200){PWM1=0;}
; 0000 0025   }
; 0000 0026 
; 0000 0027  if (PWM1==0)  {
; 0000 0028   PWM1_V+=1;
; 0000 0029   if (PWM1_V==255){PWM1=1;}
; 0000 002A   }
; 0000 002B */
; 0000 002C 
; 0000 002D Timer_1++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002E if (Timer_1<20){U1=1;U2=0;}
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 002F if (Timer_1>=20){U2=1;U1=0;}
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0030 if (Timer_1>=255){Timer_1=0;}
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0031 
; 0000 0032 if (U1==1){PORTB|=0b00000010;}
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0033 if (U2==1){PORTB&=~0b00000010;}
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0034 
; 0000 0035 
; 0000 0036 
; 0000 0037 // OCR1AL = PWM1_V;
; 0000 0038 OCR1AL = 255;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0039 
; 0000 003A 
; 0000 003B   }
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 003D {
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 003E PWM1++;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 003F // Place your code here
; 0000 0040   if ((PWM1=20)&&(PINB.1 == 1)){PORTB|=0b00000001;}
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0041   if (PWM1=25){PORTB&=~0b00000001;}
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0042   if ((PWM1=30)&&(PINB.2 == 1)){PORTB|=0b00000001;}
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0043   if (PWM1=35){PORTB&=~0b00000001;}
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0044   if ((PWM1=40)&&(PINB.3 == 1)){PORTB|=0b00000001;}
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0045   if (PWM1=45){PORTB&=~0b00000001;}
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0046   if ((PWM1=50)&&(PINB.4 == 1)){PORTB|=0b00000001;}
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0047   if (PWM1=55){PORTB&=~0b00000001;}
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0048   if ((PWM1=60)&&(PINB.5 == 1)){PORTB|=0b00000001;}
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0049   if (PWM1=65){PORTB&=~0b00000001;}
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 004A   if ((PWM1=70)&&(PINB.6 == 1)){PORTB|=0b00000001;}
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 004B   if (PWM1=75){PORTB&=~0b00000001;}
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 004C   if ((PWM1=80)&&(PINB.7 == 1)){PORTB|=0b00000001;}
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 004D   if (PWM1=85){PORTB&=~0b00000001;}
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 004E   if (PWM1==100){PWM1=0;}
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 004F 
; 0000 0050 
; 0000 0051 /*PORTB^=0b00000001;
; 0000 0052   Timer2++;
; 0000 0053   if(Timer2==20){Timer2=0;TCCR0&=~0x04;}
; 0000 0054 */
; 0000 0055 }
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 0058 {
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0059 // Place your code here
; 0000 005A //PORTB^=0b00000100;
; 0000 005B Timer1++;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 005C if (PINC.0==0) {bit1++;}
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 005D if (PINC.0==1) {bit0++;}
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 005E if (Timer1==FreqT){
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 005F Timer1=0;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 0060 if ((bit1>=TOL)&&(bit1>bit0)){// åñëè âñå (25) áèòîâ áûëè ïîëîæèòåëüíûå, òî äîáàâëÿåì 1
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 0061 bit1=bit0=0;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0062 bit01=0;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0063 bit10++;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 0064 d=d<<1; //ñäâèãàåì ïåðåìåííóþ äëÿ áèòîâ
;PCODE: $00000136 VOL: 0
; 0000 0065 d|=1;//äîáàâëÿåì â êîíåö ñòðîêè ïîëîæèòåëüíûé áèò
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0066 putchar('1');
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 0067 }
; 0000 0068 if ((bit0>=TOL)&&(bit0>bit1)){
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0069 //åñëè âñå (25) áèòîâ áûëè 0, òî äîáàâëÿåì 0
; 0000 006A bit0=bit1=0;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 006B bit01++;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 006C bit10=0;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 006D d=d<<1; //ñäâèãàåì ïåðåìåííóþ äëÿ áèòîâ
;PCODE: $00000153 VOL: 0
; 0000 006E d&=~1;//äîáàâëÿåì â êîíåö ñòðîêè íóëåâîé áèò
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 006F putchar('0');
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0070 }
; 0000 0071 shiftd++;
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 0072 ////////////////////////////
; 0000 0073 if ((bit01>5)||(bit10>5)){d=d1=d2=d3=shiftd=0;bit10=bit01=0;TCCR2&=~0x01;putchar('n');};//åñëè ïðèíÿòî 4-å íóëÿ ïîäðÿä òî òàéìåð îñòàíàâëèâàåòñÿ.
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 0074 if (shiftd==adress1){d1 = d;putchar('_');d = 0;}
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 0075 if ((shiftd==adress2)){d2 = d;putchar('_');;d = 0;}
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 0076 //if ((shiftd==adress3)){d3 = d;d = 0;}
; 0000 0077 if ((shiftd==adress3)){d3 = d;;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0078 printf("#d1=%d#d2=%d#d3=%d#",d1,d2,d3);
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 0079 //putchar('#');
; 0000 007A if (((d3==-19095)||(d3==23188))&&(Timer2==0)){PORTB^=0b00000100;putchar('A');}
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 007B if (((d3==-19098)||(d3==23187))&&(Timer2==0)){PORTB^=0b01000000;putchar('B');}
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 007C 
; 0000 007D d=d1=d2=d3=shiftd=0;
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 007E TCCR2&=~0x01;
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 007F 
; 0000 0080 }
; 0000 0081 }
;PCODE: $000001DD VOL: 0
; 0000 0082 }
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;// Declare your global variables here
;void main(void)
; 0000 0085 {
;PCODE: $000001E2 VOL: 0
; 0000 0086 
; 0000 0087 PORTB=0x00;
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 0088 DDRB=0xff;
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 0089 PORTC=0x00;
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 008A DDRC=0x00;
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 008B PORTD=0x00;
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 008C DDRD=0x00;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 008D TCCR0=0x00;
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 008E TCCR0|=0x04; //Timer1 31,250
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 008F TCNT0=0x00;
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 0090 
; 0000 0091 TCCR1B=0x0A;
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 0092 TCCR1A=0x00;
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 0093 //TIM1_COMPA
; 0000 0094 TCNT1H=0x00;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 0095 TCNT1L=0x00;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 0096 ICR1H=0x00;
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0097 ICR1L=0x00;
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0098 OCR1AH=0;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0099 OCR1AL=0;
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 009A OCR1BH=0x00;
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0000 009B OCR1BL=0x00;
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 009C 
; 0000 009D UCSRA=0x00;
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 009E UCSRB=0x18;
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 009F UCSRC=0x86;
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 00A0 UBRRH=0x00;
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 00A1 UBRRL=0x33;
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 00A2 
; 0000 00A3 ASSR=0x00;
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 00A4 TCCR2=0x00;
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 00A5 
; 0000 00A6 TCNT2=0x00;
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 00A7 OCR2=0x00;
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 00A8 
; 0000 00A9 // External Interrupt(s) initialization
; 0000 00AA // INT0: Off
; 0000 00AB // INT1: Off
; 0000 00AC MCUCR=0x00;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 00AD 
; 0000 00AE // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00AF TIMSK=0x10;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 00B0 TIMSK|=0x01; //Timer1
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 00B1 TIMSK|=0x40; //Timer2
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 00B2 
; 0000 00B3 // Analog Comparator initialization
; 0000 00B4 // Analog Comparator: Off
; 0000 00B5 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 00B6 ACSR=0x80;
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 00B7 SFIOR=0x00;
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 00B8 
; 0000 00B9 // Global enable interrupts
; 0000 00BA #asm("sei")
;PCODE: $0000022D VOL: 0
	sei
;PCODE: $0000022E VOL: 0
; 0000 00BB 
; 0000 00BC while (1)
;PCODE: $0000022F VOL: 0
; 0000 00BD       {
; 0000 00BE 
; 0000 00BF   // Place your code here
; 0000 00C0  if ((PINC.0==0)&&(d1==0))
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 00C1 {
; 0000 00C2 TCCR2|=0x01;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 00C3 }
; 0000 00C4 
; 0000 00C5 
; 0000 00C6  };
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 00C7 }
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
