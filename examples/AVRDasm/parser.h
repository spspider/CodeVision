#define CMDLEN   2
#define MAXSFR   64
#define SFRLEN   10
#define SFRPTRN  "$%hX"


enum { eFILE, eKEY } ERRORS;


typedef struct { short  opcode;
                 char*  mnemo;
                 char   length;
                 char   extra;
                 long   op1;
                 char   scale;
                 char   base;
                 long   op2;
               } CMD;


CMD cmd[] = { { 0xFE00, "sbrs    r%d,%d", 1, 0, 0x1F0, 1, 0, 0x7 },
              { 0xFC00, "sbrc    r%d,%d", 1, 0, 0x1F0, 1, 0, 0x7 },
              { 0xFA00, "bst     r%d,%d", 1, 0, 0x1F0, 1, 0, 0x7 },
              { 0xF800, "bld     r%d,%d", 1, 0, 0x1F0, 1, 0, 0x7 },
              { 0xF407, "brid    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF406, "brtc    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF405, "brhc    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF404, "brge    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF403, "brvc    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF402, "brpl    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF401, "brne    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF400, "brsh    %08lX", -1, 0, 0x3F8, 2 },
//            { 0xF400, "brcc" },
//            { 0xF400, "brbc" },
              { 0xF007, "brie    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF006, "brts    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF005, "brhs    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF004, "brlt    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF003, "brvs    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF002, "brmi    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF001, "breq    %08lX", -1, 0, 0x3F8, 2 },
              { 0xF000, "brlo    %08lX", -1, 0, 0x3F8, 2 },
//            { 0xF000, "brcs" },
//            { 0xF000, "brbs" },
              { 0xEF0F, "ser     r%d", 1, 0, 0xF0, 1, 16 },
              { 0xE000, "ldi     r%d,#%d", 1, 0, 0xF0, 1, 16, 0xF0F },
              { 0xD000, "rcall   %08lX", -1, 0, 0xFFF, 2 },
              { 0xC000, "rjmp    %08lX", -1, 0, 0xFFF, 2 },
              { 0xB800, "out     "SFRPTRN",r%d", 1, -1, 0x60F, 1, 0, 0x1F0 },
              { 0xB000, "in      r%d,"SFRPTRN, 1, -1, 0x1F0, 1, 0, 0x60F },
              { 0x9C00, "mul     r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x9B00, "sbis    "SFRPTRN",%d", 1, -1, 0xF8, 1, 0, 0x7 },
              { 0x9A00, "sbi     "SFRPTRN",%d", 1, -1, 0xF8, 1, 0, 0x7 },
              { 0x9900, "sbic    "SFRPTRN",%d", 1, -1, 0xF8, 1, 0, 0x7 },
              { 0x9800, "cbi     "SFRPTRN",%d", 1, -1, 0xF8, 1, 0, 0x7 },
              { 0x9700, "sbiw    r%d,#%d", 1, 0, 0x30, 2, 24, 0xCF },
              { 0x9600, "adiw    r%d,#%d", 1, 0, 0x30, 2, 24, 0xCF },
/* v1.02 */   { 0x95F8, "espm", 1, 1 },
/* v1.02 */   { 0x95E8, "spm", 1, 1 },
/* v1.02 */   { 0x95D8, "elpm", 1, 1 },
              { 0x95C8, "lpm", 1, 1 },
              { 0x95A8, "wdr", 1, 1 },
              { 0x9588, "sleep", 1, 1 },
/* v1.02 */   { 0x9519, "eicall" , 1, 1 },
              { 0x9518, "reti" , 1, 1 },
              { 0x9509, "icall", 1, 1 },
              { 0x9508, "ret", 1, 1 },
              { 0x94F8, "cli", 1, 1 },
              { 0x94E8, "clt", 1, 1 },
              { 0x94D8, "clh", 1, 1 },
              { 0x94C8, "cls", 1, 1 },
              { 0x94B8, "clv", 1, 1 },
              { 0x94A8, "cln", 1, 1 },
              { 0x9498, "clz", 1, 1 },
              { 0x9488, "clc", 1, 1 },
//            { 0x9488, "bclr" },
              { 0x9478, "sei", 1, 1 },
              { 0x9468, "set", 1, 1 },
              { 0x9458, "seh", 1, 1 },
              { 0x9448, "ses", 1, 1 },
              { 0x9438, "sev", 1, 1 },
              { 0x9428, "sen", 1, 1 },
/* v1.02 */   { 0x9419, "eijmp", 1, 1 },
              { 0x9418, "sez", 1, 1 },
              { 0x940E, "call    %08lX", 2, 0, 0x1F1FFFF, 2, 0 },
              { 0x940C, "jmp     %08lX", 2, 0, 0x1F1FFFF, 2, 0 },
              { 0x940A, "dec     r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9409, "ijmp", 1, 1 },
              { 0x9408, "sec", 1, 1 },
//            { 0x9408, "bset" },
              { 0x9407, "ror     r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9406, "lsr     r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9405, "asr     r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9403, "inc     r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9402, "swap    r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9401, "neg     r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9400, "com     r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x920F, "push    r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x920E, "st      -x,r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x920D, "st      x+,r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x920C, "st      x,r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x920A, "st      -y,r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9209, "st      y+,r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9202, "st      -z,r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9201, "st      z+,r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x9200, "sts     $%lX,r%ld", 2, 0, 0x0000FFFF, 1, 0, 0x1F00000 },
              { 0x900F, "pop     r%d", 1, 0, 0x1F0, 1, 0 },
              { 0x900E, "ld      r%d,-x", 1, 0, 0x1F0, 1, 0 },
              { 0x900D, "ld      r%d,x+", 1, 0, 0x1F0, 1, 0 },
              { 0x900C, "ld      r%d,x", 1, 0, 0x1F0, 1, 0 },
              { 0x900A, "ld      r%d,-y", 1, 0, 0x1F0, 1, 0 },
              { 0x9009, "ld      r%d,y+", 1, 0, 0x1F0, 1, 0 },
/* v1.02 */   { 0x9007, "elpm    r%d,z+", 1, 0, 0x1F0, 1, 0 },
/* v1.02 */   { 0x9006, "elpm    r%d,z", 1, 0, 0x1F0, 1, 0 },
/* v1.02 */   { 0x9005, "lpm     r%d,z+", 1, 0, 0x1F0, 1, 0 },
/* v1.02 */   { 0x9004, "lpm     r%d,z", 1, 0, 0x1F0, 1, 0 },
              { 0x9002, "ld      r%d,-z", 1, 0, 0x1F0, 1, 0 },
              { 0x9001, "ld      r%d,z+", 1, 0, 0x1F0, 1, 0 },
              { 0x9000, "lds     r%ld,$%lX", 2, 0, 0x1F00000, 1, 0, 0x0000FFFF },
              { 0x8208, "st      y,r%d", 1, 2, 0x1F0, 1, 0, 0x2C07 },
              { 0x8208, "std     y+%d,r%d", 1, 0, 0x2C07, 1, 0, 0x1F0 },
              { 0x8200, "st      z,r%d", 1, 2, 0x1F0, 1, 0, 0x2C07 },
              { 0x8200, "std     z+%d,r%d", 1, 0, 0x2C07, 1, 0, 0x1F0 },
              { 0x8008, "ld      r%d,y", 1, 2, 0x1F0, 1, 0, 0x2C07 },
              { 0x8008, "ldd     r%d,y+%d", 1, 0, 0x1F0, 1, 0, 0x2C07 },
              { 0x8000, "ld      r%d,z", 1, 2, 0x1F0, 1, 0, 0x2C07 },
              { 0x8000, "ldd     r%d,z+%d", 1, 0, 0x1F0, 1, 0, 0x2C07 },
              { 0x7000, "andi    r%d,#$%hX", 1, 0, 0xF0, 1, 16, 0xF0F },
//            { 0x7000, "cbr" },
              { 0x6000, "ori     r%d,#$%hX", 1, 0, 0xF0, 1, 16, 0xF0F },
//            { 0x6000, "sbr" },
              { 0x5000, "subi    r%d,#%d", 1, 0, 0xF0, 1, 16, 0xF0F },
              { 0x4000, "sbci    r%d,#%d", 1, 0, 0xF0, 1, 16, 0xF0F },
              { 0x3000, "cpi     r%d,#%d", 1, 0, 0xF0, 1, 16, 0xF0F },
              { 0x2C00, "mov     r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x2800, "or      r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x2400, "clr     r%d", 1, 3, 0x1F0, 1, 0, 0x20F },
              { 0x2400, "eor     r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x2000, "tst     r%d", 1, 3, 0x1F0, 1, 0, 0x20F },
              { 0x2000, "and     r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x1C00, "rol     r%d", 1, 3, 0x1F0, 1, 0, 0x20F },
              { 0x1C00, "adc     r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x1800, "sub     r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x1400, "cp      r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x1000, "cpse    r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x0C00, "lsl     r%d", 1, 3, 0x1F0, 1, 0, 0x20F },
              { 0x0C00, "add     r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x0800, "sbc     r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
              { 0x0400, "cpc     r%d,r%d", 1, 0, 0x1F0, 1, 0, 0x20F },
/* v1.02 */   { 0x0388, "fmulsu  r%d,r%d", 1, -2, 0x70, 1, 16, 0x7 },
/* v1.02 */   { 0x0380, "fmuls   r%d,r%d", 1, -2, 0x70, 1, 16, 0x7 },
/* v1.02 */   { 0x0308, "fmul    r%d,r%d", 1, -2, 0x70, 1, 16, 0x7 },
/* v1.02 */   { 0x0300, "mulsu   r%d,r%d", 1, -2, 0x70, 1, 16, 0x7 },
/* v1.02 */   { 0x0200, "muls    r%d,r%d", 1, -2, 0xF0, 1, 16, 0xF },
/* v1.02 */   { 0x0100, "movw    r%d,r%d", 1, -2, 0xF0, 2, 0, 0xF },
              { 0x0000, "nop", 1, 1 },
              { 0x0000, "???", 1, 0 }
            };
