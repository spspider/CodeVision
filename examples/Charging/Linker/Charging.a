;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Standard Input/Output functions
;#include <stdio.h>
;//unsigned int adc1[2],Timer6;
;unsigned char Timer1,Timer4,c1,Timer2,Timer3,bat,Timer5,a1,Timer7,aStop,Timer8;
;unsigned char adc1[2],Timer6;
;// Timer 0 overflow interrupt service routine
;#include <INT.c>
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0009 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;#include <beep.c>
;if((a1==1)&&(aStop==1)){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;Timer6++;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;if (Timer6>=1000)
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;{
;Timer5++;
;PCODE: $00000020 VOL: 0
;if(Timer5==10){
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PORTD^=0b00000100;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;Timer5=0;
;PCODE: $00000029 VOL: 0
;}
;}
;PCODE: $0000002A VOL: 0
;if(Timer6>=1500)
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;{PORTD&=~0b00000100;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;Timer6=0;Timer7++;}
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;}
;PCODE: $00000037 VOL: 0
;if(Timer7>=5){
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;a1=0;aStop=0;Timer6=Timer5=Timer7=0;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;}
;
;
;if((a1==2)&&(aStop==1)){
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;Timer6++;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;if (Timer6>=800)
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;{
;Timer5++;
;PCODE: $00000054 VOL: 0
;if(Timer5==5){
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PORTD^=0b00000100;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;Timer5=0;
;PCODE: $0000005D VOL: 0
;}
;}
;PCODE: $0000005E VOL: 0
;if(Timer6>=1000)
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;{PORTD&=~0b00000100;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;Timer6=0;Timer7++;}
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;}
;PCODE: $0000006B VOL: 0
;if(Timer7>=2){
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;a1=0;aStop=0;Timer6=Timer5=Timer7=0;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;}
;//Timer1++;
;Timer8++;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;if (Timer8==1){PORTD^=0b00001000;}
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;
;  if (Timer1>=255){Timer1=0;Timer2++;Timer3++;Timer4++;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;    }
;  if(Timer3>=5){
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;
;  if((adc1[0]<300)&&(adc1[0]>=500)){PORTD^=0b10000000;Timer3=0;a1=1;}
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;  if((adc1[1]<300)&&(adc1[1]>=500)){PORTD^=0b00100000;Timer3=0;a1=1;}
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;  Timer3=0;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;  }// мигание лампы акк разряжен
;
;  if(Timer4>=10){
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;  if(adc1[0]<500){PORTD^=0b10000000;Timer4=0;}
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;  if(adc1[1]<500){PORTD^=0b00100000;Timer4=0;}
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;  Timer4=0;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;  }// мигание лампы
;
;
;  if(Timer2>=20){
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;  PORTB&=~0b00000011;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;  }
;  if(Timer2>=22){
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;  switch (bat){
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;  case 1: {bat=0;break;}
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;  case 0: {bat=1;break;}
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;  }
;PCODE: $000000EF VOL: 0
;  //bat=1;
;  c1=1;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;  }
;  if(Timer2>=25){
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;  if(adc1[0]<500){PORTB|=0b00000001;Timer2=0;}
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;  if(adc1[1]<500){PORTB|=0b00000010;Timer2=0;}
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;
;  if(adc1[0]>500){PORTB&=~0b00000001;PORTD|=0b10000000;Timer2=0;a1=2;aStop=1;}
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;  if(adc1[1]>500){PORTB&=~0b00000010;PORTD|=0b00100000;Timer2=0;a1=2;aStop=1;}
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;  Timer2=0;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;
;  printf("bat0=%d bat1=%d#",adc1[0],adc1[1]);
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;  }
;}                  //заряд завершен - aStop=0;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;
;#include <delay.h>
;
;// Read the AD conversion result
;#include <ADC.c>
;#define ADC_VREF_TYPE 0
;
;
;unsigned int read_adc(unsigned char adc_input)
; 0000 000E {
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;ADMUX=adc_input|(ADC_VREF_TYPE & 0xff);
;	adc_input -> Y+0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;// Start the AD conversion
;ADCSRA|=0x40;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;// Wait for the AD conversion to complete
;while ((ADCSRA & 0x10)==0);
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;ADCSRA|=0x10;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;return ADCW;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;}
;PCODE: $0000015A VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0013 {
;PCODE: $0000015B VOL: 0
; 0000 0014 
; 0000 0015 PORTB=0b00000000;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0016 DDRB=0b01000011;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 0017 PORTC=0x00;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 0018 DDRC=0x00;
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 0019 PORTD=0x00;
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 001A DDRD=0b10101100;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 001B 
; 0000 001C TCCR0=0x01;
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 001D TCNT0=0x00;
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 001E 
; 0000 001F 
; 0000 0020 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0021 TIMSK|=0x01;
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 0022 
; 0000 0023 UCSRA=0x00;
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 0024 UCSRB=0x18;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 0025 UCSRC=0x86;
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 0026 UBRRH=0x00;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 0027 UBRRL=0x33;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 0028 
; 0000 0029 // Analog Comparator initialization
; 0000 002A // Analog Comparator: Off
; 0000 002B // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 002C ACSR=0x80;
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 002D SFIOR=0x00;
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 002E 
; 0000 002F // ADC initialization
; 0000 0030 // ADC Clock frequency: 1000,000 kHz
; 0000 0031 // ADC Voltage Reference: AREF pin
; 0000 0032 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 0033 ADCSRA=0x83;
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 0034 
; 0000 0035 // Global enable interrupts
; 0000 0036 #asm("sei")
;PCODE: $00000182 VOL: 0
	sei
;PCODE: $00000183 VOL: 0
; 0000 0037 
; 0000 0038 while (1)
;PCODE: $00000184 VOL: 0
; 0000 0039       {
; 0000 003A       // Place your code here
; 0000 003B       if (c1==1){c1=0;adc1[bat] = read_adc(bat);} //проверка уровня заряда
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 003C 
; 0000 003D 
; 0000 003E       };
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 003F }
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
