;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>        // подключаем библиотеку задержки
;
; unsigned char sek;        // переменная сек.
; unsigned char min;        // пересенная мин.
; unsigned char hour;       // переменная часов
; unsigned char Dig[10];
; char Disp6, Disp7;
;
;// Timer 1 output compare A interrupt service routine
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)  // таймер выставлен на частоту 1 Гц
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D // Place your code here
; 0000 000E        TCNT1H=0;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000F        TCNT1L=0;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0010        sek++;                // инкрементируем секунду
;PCODE: $00000013 VOL: 0
; 0000 0011        PORTD=128;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0012        PORTB=253;         // выводим точку
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0013 
; 0000 0014       // работаем с кнопками
; 0000 0015   if (PINC.0==0) // если нажата первая кнопка
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0016   {
; 0000 0017   hour++; // к значению часы добавляем единицу
;PCODE: $0000001B VOL: 0
; 0000 0018   }
; 0000 0019   if (PINC.1==0) // если нажата вторая кнопка
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001A   {
; 0000 001B   hour--; // к значению часы вычитаем единицу у
;PCODE: $00000020 VOL: 0
; 0000 001C   }
; 0000 001D   if (PINC.2==0) // если нажата третья кнопка
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001E   {
; 0000 001F   min++; // к значению минуты добавляем единицу
;PCODE: $00000025 VOL: 0
; 0000 0020   }
; 0000 0021   if (PINC.3==0) // если нажата четвертая кнопка
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0022   {
; 0000 0023   min--; // к значению минуты вычитаем единицу
;PCODE: $0000002A VOL: 0
; 0000 0024   }
; 0000 0025   if (PINC.4==0) // кнопка RESET
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0026   {
; 0000 0027   sek=0;
;PCODE: $0000002F VOL: 0
; 0000 0028   }
; 0000 0029 
; 0000 002A 
; 0000 002B }
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;
;// Declare your global variables here
;
;void Display (unsigned int Number) //Ф-ция для разложения десятичного цисла
; 0000 0030 {
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0031   unsigned char Num2, Num3;
; 0000 0032   Num2=0;
;PCODE: $00000036 VOL: 0
;	Number -> Y+2
;	Num2 -> R17
;	Num3 -> R16
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0033   while (Number >= 10)   //десятичную
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0034   {
; 0000 0035     Number -= 10;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0036     Num2++;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0037   }
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0038   Num3 = Number;    //остаток
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0039   Disp6 = Dig[Num2];
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 003A   Disp7 = Dig[Num3];
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 003B }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;void Dig_init() //Массив для отображения цифр на семисегментном индикаторе
; 0000 003D {
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 003E   Dig[0] = 95;   // Сейчас у нас схема с общим катодом
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 003F   Dig[1] = 24;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0040   Dig[2] = 109;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0041   Dig[3] = 124;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0042   Dig[4] = 58;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0043   Dig[5] = 118;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0044   Dig[6] = 119;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0045   Dig[7] = 28;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0046   Dig[8] = 127;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0047   Dig[9] = 126;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0048 }
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;
;void main(void)
; 0000 004B {
;PCODE: $00000073 VOL: 0
; 0000 004C PORTB=0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 004D DDRB=0xFF;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 004E PORTC=0xFF;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 004F DDRC=0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0050 PORTD=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0051 DDRD=0xFF;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0052 TCCR0=0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0053 TCNT0=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0054 TCCR1A=0x00;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0055 TCCR1B=0x05;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0056 TCNT1H=0x00;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0057 TCNT1L=0x00;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0058 ICR1H=0x00;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0059 ICR1L=0x00;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 005A OCR1AH=0x1E;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 005B OCR1AL=0x85;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 005C OCR1BH=0x00;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 005D OCR1BL=0x00;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 005E ASSR=0x00;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 005F TCCR2=0x00;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0060 TCNT2=0x00;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0061 OCR2=0x00;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0062 MCUCR=0x00;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0063 TIMSK=0x10;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0064 ACSR=0x80;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0065 SFIOR=0x00;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0066 #asm("sei")
;PCODE: $000000A8 VOL: 0
	sei
;PCODE: $000000A9 VOL: 0
; 0000 0067 Dig_init(); //инициализация массива с двоичным кодом
;PCODE: $000000AA VOL: 0
; 0000 0068 while (1)
;PCODE: $000000AB VOL: 0
; 0000 0069       {
; 0000 006A          // защита переполнения переменной, она нужна для того чтобы в моментах когда время не переходило в минус.
; 0000 006B   if (hour==255)
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 006C   hour=0;
;PCODE: $000000AF VOL: 0
; 0000 006D   if (min==255)
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 006E   min=0;
;PCODE: $000000B4 VOL: 0
; 0000 006F          // выводим переменные (стробирование)
; 0000 0070         Display(hour); //разложили "часы" на 2 цифры и отобразили по очереди
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0071          PORTB=254;    //даем лог 0 для катода 1 разряда
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0072          PORTD=Disp6;  //1 цифра
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0073         delay_ms(5);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0074          PORTB=253;    //даем лог 0 для катода 2 разряда
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0075         PORTD=Disp7;   //2 цифра
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 0076         delay_ms(5);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0077          Display(min);  //разложили "минуты" на 2 цифры и отобразили по очереди
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0078         PORTB=251;      //даем лог 0 для катода 3 разряда
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0079         PORTD=Disp6;  //3 цифра
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 007A         delay_ms(5);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 007B          PORTB=247;    //даем лог 0 для катода 4 разряда
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 007C         PORTD=Disp7;   //4...
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 007D         delay_ms(5);
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 007E }
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 007F }
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
